
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;
	
	// ВКМ{
	Движение.ВКМ_СтоимостьУслуг = Услуги.Итог("Сумма");
    // }ВКМ
	

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

// ВКМ{
Процедура ВКМ_ВыполнитьАвтозаполнение(Договор)Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_НоменклатураАбонентскаяПлата.Значение КАК РаботыАбонПлатаКонст,
	|	ВКМ_НоменклатураРаботыСпециалиста.Значение КАК РаботыСпециалистаКонст,
	|	ДоговорыКонтрагентов.ВКМ_АбонентскаяПлата КАК АбонентскаяПлатаДог
	|ИЗ
	|	Константа.ВКМ_НоменклатураАбонентскаяПлата КАК ВКМ_НоменклатураАбонентскаяПлата,
	|	Константа.ВКМ_НоменклатураРаботыСпециалиста КАК ВКМ_НоменклатураРаботыСпециалиста,
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	-ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот КАК КоличествоЧасов,
	|	-ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода, Месяц, ) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
	|ГДЕ
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор.Ссылка = &Ссылка"; 
	
	Запрос.УстановитьПараметр("Ссылка", Договор);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата)); 
	
	МассивВыборок = Запрос.ВыполнитьПакет();
	
	ВыборкаКонст = МассивВыборок[0].Выбрать();
	ВыборкаРегистр = МассивВыборок[1].Выбрать(); 
	
	Пока ВыборкаКонст.Следующий() Цикл
		РаботыАбонПлатаКонст = ВыборкаКонст.РаботыАбонПлатаКонст; 
		РаботыСпециалистаКонст = ВыборкаКонст.РаботыСпециалистаКонст;
		АбонентскаяПлатаДог = ВыборкаКонст.АбонентскаяПлатаДог;
	КонецЦикла; 
	
	Если Не ЗначениеЗаполнено(РаботыАбонПлатаКонст) 
		ИЛИ Не ЗначениеЗаполнено(РаботыСпециалистаКонст) Тогда 
		ОбщегоНазначения.СообщитьПользователю("Вид работ не установлен");
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Услуги.Очистить();
	
	ТабЧастьУслуги = ЭтотОбъект.Услуги.Добавить();
	ТабЧастьУслуги.Номенклатура = РаботыАбонПлатаКонст;
	ТабЧастьУслуги.Количество = 1;
	ТабЧастьУслуги.Цена = АбонентскаяПлатаДог;
	ТабЧастьУслуги.Сумма = АбонентскаяПлатаДог;
	
	Пока ВыборкаРегистр.Следующий() Цикл
		ТабЧастьУслуги = ЭтотОбъект.Услуги.Добавить();
		ТабЧастьУслуги.Номенклатура = РаботыСпециалистаКонст;
		ТабЧастьУслуги.Количество = ВыборкаРегистр.КоличествоЧасов;
		ТабЧастьУслуги.Сумма = ВыборкаРегистр.СуммаКОплате;
		ТабЧастьУслуги.Цена = ВыборкаРегистр.СуммаКОплате/ВыборкаРегистр.КоличествоЧасов; 
	КонецЦикла;
	
КонецПроцедуры 
// }ВКМ	


#КонецОбласти

#КонецЕсли
